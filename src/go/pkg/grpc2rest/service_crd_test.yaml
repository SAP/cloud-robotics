apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cr-syncer.cloudrobotics.com/filter-by-robot-name: "false"
    cr-syncer.cloudrobotics.com/spec-source: cloud
    crc.cloudrobotics.com/proto-descriptor: 
  creationTimestamp: null
  name: helloworlds.hello-world.cloudrobotics.com
spec:
  group: hello-world.cloudrobotics.com
  names:
    kind: HelloWorld
    plural: helloworlds
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              additional_greeting:
                format: byte
                type: string
              greeting:
                type: string
              helloStyle:
                enum:
                - UNKNOWN
                - FRIENDLY
                - RESERVED
                type: string
              hellosGiven:
                format: int32
                type: integer
              primary:
                properties:
                  name:
                    type: string
                type: object
              secondary:
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
              shouldHello:
                format: boolean
                type: boolean
            type: object
          status:
            properties:
              didHello:
                format: boolean
                type: boolean
            type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha1
