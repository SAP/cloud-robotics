// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/googlecloudrobotics/core/src/go/pkg/setup/util (interfaces: Factory)

// Package setup is a generated GoMock package.
package setup

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFactory is a mock of Factory interface
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
}

// MockFactoryMockRecorder is the mock recorder for MockFactory
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// GetNetworkInterfaceIP mocks base method
func (m *MockFactory) GetNetworkInterfaceIP(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "GetNetworkInterfaceIP", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkInterfaceIP indicates an expected call of GetNetworkInterfaceIP
func (mr *MockFactoryMockRecorder) GetNetworkInterfaceIP(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkInterfaceIP", reflect.TypeOf((*MockFactory)(nil).GetNetworkInterfaceIP), arg0)
}

// ScanInt mocks base method
func (m *MockFactory) ScanInt() (int, error) {
	ret := m.ctrl.Call(m, "ScanInt")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScanInt indicates an expected call of ScanInt
func (mr *MockFactoryMockRecorder) ScanInt() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanInt", reflect.TypeOf((*MockFactory)(nil).ScanInt))
}
